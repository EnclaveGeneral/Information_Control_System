/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pages;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author godpo
 */
public class PublicationCategories extends javax.swing.JFrame {

    /**
     * Creates new form PublicationCategories
     */
    public PublicationCategories() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //SetBackGround To Enclave Standard
        VisualDisplay vd = new VisualDisplay();
        vd.displayImageFrame(BackGround.getWidth(), BackGround.getHeight(), "P:\\Coding Files\\EnclaveSystem\\InformationAccess\\src\\main\\java\\VisualFiles\\RobCoBackground.jpg", BackGround);
        
        //SetBackButton To Enclave Standard
        VisualDisplay vd1 = new VisualDisplay();
        vd1.displayImageFrame(Back.getWidth(), Back.getHeight(), "P:\\Coding Files\\EnclaveSystem\\InformationAccess\\src\\main\\java\\VisualFiles\\BackButton.png", Back);
        //Table Customization
        CategoriesTable.setSelectionBackground(new Color(0, 0, 255));
        CategoriesTable.setSelectionForeground(new Color(0, 204, 102));
        CategoriesTable.setBackground(Color.WHITE);
        CategoriesTable.setForeground(Color.BLACK);
        CategoriesTable.setShowGrid(true);
        CategoriesTable.setRowHeight(30);
        
        //Table Header Customization
        //CategoriesTable.getTableHeader().setBackground(Color.WHITE);
        CategoriesTable.getTableHeader().setForeground(Color.BLACK);
        CategoriesTable.getTableHeader().setOpaque(false);
        CategoriesTable.getTableHeader().setFont(new Font("Arial", Font.BOLD, 24));
        
        //Populate the Table with current Categories record
        populate();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CategoryInput = new javax.swing.JTextField();
        IDInput = new javax.swing.JTextField();
        PurgeButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoriesTable = new javax.swing.JTable();
        RefreshButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        BackButton = new javax.swing.JLabel();
        Back = new javax.swing.JLabel();
        BackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 51));
        jLabel2.setText("Current Categories:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 230, -1, 47));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 0));
        jLabel1.setText("ID:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 40, 41));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 255, 0));
        jLabel3.setText("Category:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, -1, 41));

        CategoryInput.setBackground(new java.awt.Color(0, 0, 0));
        CategoryInput.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        CategoryInput.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(CategoryInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 300, 41));

        IDInput.setBackground(new java.awt.Color(0, 0, 0));
        IDInput.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        IDInput.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(IDInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 300, 40));

        PurgeButton.setText("Purge(All)");
        PurgeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PurgeButtonMouseClicked(evt);
            }
        });
        PurgeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurgeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PurgeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 550, 200, 60));

        AddButton.setBackground(new java.awt.Color(0, 255, 0));
        AddButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        AddButton.setText("Add");
        AddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddButtonMouseClicked(evt);
            }
        });
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 180, 60));

        DeleteButton.setBackground(new java.awt.Color(255, 0, 0));
        DeleteButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DeleteButton.setText("Delete(Current)");
        DeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteButtonMouseClicked(evt);
            }
        });
        getContentPane().add(DeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 440, 180, 60));

        CategoriesTable.setBackground(new java.awt.Color(0, 0, 0));
        CategoriesTable.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        CategoriesTable.setForeground(new java.awt.Color(255, 255, 255));
        CategoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Category"
            }
        ));
        jScrollPane1.setViewportView(CategoriesTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 280, -1, 250));

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });
        getContentPane().add(RefreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 550, 200, 60));

        ClearButton.setBackground(new java.awt.Color(255, 255, 0));
        ClearButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        ClearButton.setText("Clear(Input)");
        ClearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearButtonMouseClicked(evt);
            }
        });
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 180, 60));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 255, 0));
        jLabel4.setText("Categories Management: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, 47));
        getContentPane().add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, -1, -1));

        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 75, 75));
        getContentPane().add(BackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, 1200, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddButtonMouseClicked
        String name = CategoryInput.getText().trim();
        String id = IDInput.getText().trim();
        
        if (name.isBlank()|| id.isBlank()){
            JOptionPane.showMessageDialog(rootPane, "One or more field(s) empty!", "Unable To Add", JOptionPane.ERROR_MESSAGE);
        } else {
            Categories newAddition = new Categories(name, id);
            boolean confirmed = newAddition.addCategory();
            if (confirmed) {
                ImageIcon icon = new ImageIcon("P:\\Coding Files\\EnclaveSystem\\InformationAccess\\src\\main\\java\\VisualFiles\\correctIconSmol.png");
                JOptionPane.showMessageDialog(rootPane, "Addition Confirmed Successful!", "Result Confirmed", JOptionPane.INFORMATION_MESSAGE, icon);
                CategoryInput.setText(null);
                IDInput.setText(null);
                populate();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Addition Confirmed Failure! Possible Syntax Error(s)! ", "Failure Confirmed", JOptionPane.ERROR_MESSAGE);
                CategoryInput.setText(null);
                IDInput.setText(null);
            }
        }
    }//GEN-LAST:event_AddButtonMouseClicked

    private void DeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteButtonMouseClicked
        int result = JOptionPane.showConfirmDialog(rootPane, "Confirm To Delete This Specified Entry?", "Delete Confirmation", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        String category = CategoryInput.getText().trim();
        String id = IDInput.getText().trim();
        Categories cur = new Categories(category, id);
        if (result == JOptionPane.OK_OPTION){
            if (category.isBlank() || id.isBlank()){
                JOptionPane.showMessageDialog(rootPane, "One or more field(s) empty!", "Unable To Add", JOptionPane.ERROR_MESSAGE);
            } else if(!cur.checkExistence()){
                JOptionPane.showMessageDialog(rootPane, "This Category Does Not Currently Exists!", "Process Notification", JOptionPane.ERROR_MESSAGE);
            }else {
                boolean confirm = cur.removeCategory();
                if (confirm) {
                    ImageIcon icon = new ImageIcon("P:\\Coding Files\\EnclaveSystem\\InformationAccess\\src\\main\\java\\VisualFiles\\correctIconSmol.png");
                    JOptionPane.showMessageDialog(rootPane, "Deletion Confirmed!", "Deletion Confirmed", JOptionPane.INFORMATION_MESSAGE, icon);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Process Failed, error(s) with the server!", "Deletion Failed", JOptionPane.ERROR_MESSAGE);
                }
            }    
        }
        clear();
        populate();
    }//GEN-LAST:event_DeleteButtonMouseClicked

    private void PurgeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurgeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PurgeButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshButtonActionPerformed
    
    private void clear(){
        CategoryInput.setText(null);
        IDInput.setText(null);
    }
    
    private void ClearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearButtonMouseClicked
        CategoryInput.setText(null);
        IDInput.setText(null);
    }//GEN-LAST:event_ClearButtonMouseClicked

    private void PurgeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PurgeButtonMouseClicked
        Categories cur = new Categories();
        boolean result = cur.purge();
        if(result){
            ImageIcon icon = new ImageIcon("P:\\Coding Files\\EnclaveSystem\\InformationAccess\\src\\main\\java\\VisualFiles\\correctIconSmol.png");
            JOptionPane.showMessageDialog(rootPane, "Purge Successful!", "Processs Completed!", JOptionPane.INFORMATION_MESSAGE, icon);
        } 
        populate();
    }//GEN-LAST:event_PurgeButtonMouseClicked

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        CategoryInput.setText(null);
        IDInput.setText(null);
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        Dashboard db = new Dashboard(CurrentUser.getFirstName(), CurrentUser.getLastName(), CurrentUser.getUserName(), CurrentUser.getBirthDay(), CurrentUser.getEnclaveRank());
        db.setVisible(true);
        db.pack();
        db.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked
    
    //Refresh The Table and Update It To Reflect Current Changes;
    private void populate(){
        Categories currentCategories = new Categories();
        ArrayList<Categories> categoryList = currentCategories.getCategoryList();
        
        //Each Table Column(s):
        String[] columnNames = {"ID", "Category"};
        
        //Each Table Row(s):
        Object[][] rows = new Object[categoryList.size()][columnNames.length];
        
        for(int i = 0; i < categoryList.size(); i++){
            rows[i][0] = categoryList.get(i).getId();
            rows[i][1] = categoryList.get(i).getName();
            
        }
        
        DefaultTableModel dfModel = new DefaultTableModel(rows, columnNames);
        CategoriesTable.setModel(dfModel);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PublicationCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PublicationCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PublicationCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PublicationCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PublicationCategories().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JLabel Back;
    private javax.swing.JLabel BackButton;
    private javax.swing.JLabel BackGround;
    private javax.swing.JTable CategoriesTable;
    private javax.swing.JTextField CategoryInput;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField IDInput;
    private javax.swing.JButton PurgeButton;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
